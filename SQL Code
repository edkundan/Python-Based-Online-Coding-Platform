1. Create Database
sql
Copy code
CREATE DATABASE python_coding_platform;
USE python_coding_platform;
2. Create roles Table
sql
Copy code
CREATE TABLE roles (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE
);

3. Create users Table
sql
Copy code
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    role_id INT,
    FOREIGN KEY (role_id) REFERENCES roles(id)
);

4. Create code_executions Table
sql
Copy code
CREATE TABLE code_executions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    code TEXT NOT NULL,
    output TEXT,
    status ENUM('SUCCESS', 'FAILURE') DEFAULT 'SUCCESS',
    FOREIGN KEY (user_id) REFERENCES users(id)
);

5. Create challenges Table
sql
Copy code
CREATE TABLE challenges (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT NOT NULL
);

6. Create submissions Table
sql
Copy code
CREATE TABLE submissions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    challenge_id INT,
    code TEXT NOT NULL,
    output TEXT,
    status ENUM('PENDING', 'PASSED', 'FAILED') DEFAULT 'PENDING',
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (challenge_id) REFERENCES challenges(id)
);

7. Create Indexes (Optional)
sql
Copy code
CREATE INDEX idx_username ON users (username);
CREATE INDEX idx_email ON users (email);



This schema includes only the essential tables and relationships for your platform, such as users, roles, code executions, challenges, and submissions. Let me know if you need any adjustments!







